/*
Colors Used

Text Color (Dark Gray): #2b2b2b;
Primary Color (Purple): #357b70;
Secondary Color (Orange): #e0b354;
*/

:root {
    --primary-color: #357b70;
    --secondary-color: #e0b354;
    --font-bold: 700;
    --animation-infinite: infinite alternate linear;
}

body {
    font-family: 'Roboto', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.6;
}

h1{
    font-size: 30px;
    font-weight: var(--font-bold);
}

h2{
    font-size: 24px;
    font-weight: var(--font-bold);
}

h3{
    font-size: 18px;
    font-weight: var(--font-bold);
}

/*
a{
    color: #357b70;
}
Using CSS variable, this is the same as the code above: */
a {
    color: var(--primary-color);
}

a:visited {
    /*Visited link*/
    color: #05676e;
}

a:hover, a:focus {
    /* No underlining when hovering over a link*/
    text-decoration: none;
}

a:active {
    /*Selected link*/
    color: #489c79;
}

button,
.button {
    /* overwrites browser defaults and resets the border */
    border: none;
    /* takes the font from the outer container */
    font-family: inherit;
    /* styles the background color, font color, and text decoration (underline, etc.) of the button */
    background-color: var(--primary-color);
    color: white;
    text-decoration: none;
    /*adds spacing to the button (this will be discussed more in-depth later) */
    padding: 10px;
    border-radius: 3px;
    /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    /*
    transition-duration: 0.2s;
    transition-property: opacity;
   
    Short hand for code above */
    transition: 0.2s opacity;
}

button:hover, 
button:focus,
.button:hover,
.button:focus {
    /* lets the mouse appear as a hand when hovering over the button */
    cursor: pointer;
    /* reduces the opacity of the button to 80% */
    opacity: 0.8;
}
/* Used for Exercise 1.5 
.button_secondary{
    background-color: #e0b354;
    color: #2b2b2b
} */

.profile_portrait {
    float: left;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.page-footer {
    /* Clears both left and right floats*/
    clear:both;
    display: flex;
    flex-direction: column;
    text-align: center;
}

.profile {
    /* Allows for responsive design by limiting the box from exceeding 700px */
    max-width: 700px;
    margin: 0 auto;
}

/* This ensures that the default width off ALL (*) elements will include the padding and border*/

* {
    box-sizing: border-box;
}

.page-header {
    display: flex;
    width: 100%;
    padding: 20px; 
}

.page-header__item {
    flex: 0 1 200px;
}

.page-header__item:first-child {
    width: 200px;
    height: auto;
    max-height: 200px;
}

.page-header__item:last-child{
    flex-grow: 1;
    text-align: right;
}

.navigation-list, .about-list__item {
    list-style-type: none;
}

.navigation-list li {
    display: inline-block;
    margin-left: 15px;
}

.navigation-list__item--active {
    text-decoration: none;
}

/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
}
/* end grid fallback */

@supports (display: grid) {
.grid {
    display: grid;
    /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    margin: 0px;
}

.grid__item {
    background-color: lightgray;
    width: auto;
    min-height: auto;
    margin: 0;
 }
/*
grid__item:last-child {
    grid-column-start: 3;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 3;
 } 
Short-form of the code above. In each rule we are telling the last grid item to start and end in column 3 and also to start in row 1 and end in row 3 */
.grid__item:last-child {
     grid-column: 3 / 3;
     grid-row: 1 / 3;
}
}

/* Media query for displays smaller than 500px */
@media all and (max-width: 500px) {
    .grid {
        grid-template-columns: 1fr;
    }
}

/* Media query for displays smaller than between 500px and 750px */
@media all and (min-width: 500px) and (max-width: 750px) {
    .grid {
        grid-template-columns: 1fr 1fr;
    }
}

/* shared code (used so that we are not repeating code) */
@media all and (max-width: 750px){
    .grid {
        grid-gap: 10px;
    }

    .grid__item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto; 
    }

    h1 {
        font-size: 22px; 
    }
}

.about-section {
    display: flex;
    flex-direction: column;
    text-align: center;
    /*
    max-width: 700px;
    margin: 0 auto; */
    flex: 0 1 200px;
}

.contact-info {
    margin-bottom: 10%;
}

.about-graphic {
    display: block;
    margin: auto;
}

.button {
    width: 200px;
    margin: 0 auto
} 

@keyframes color-change {
    0% {
        fill: #edc655;
    }
    50% {
        fill: #fcffad;
    }
    100% {
        fill: #f76414;
    }
}

.sun {
    /*
    animation-duration: 4s;
    animation-name: color-change;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;

    Short hand for code above */
    animation: 4s color-change var(--animation-infinite);
}

@keyframes cloud-move {
    from {
        transform: translate(0, 50px);
    }
    to {
        transform: translate(200px, 50px);
    }
}

.cloud-right {
    animation: 26s cloud-move var(--animation-infinite);
}

@keyframes cloud-move-reverse {
    from {
        transform: translate(446px,48px);
    }
    to{
        transform: translate(100px, 48px);
    }
}

.cloud-left {
    animation: 30s cloud-move-reverse var(--animation-infinite); 

.work-header {
    text-align: center;
}

